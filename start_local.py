#!/usr/bin/env python3
"""
Local startup script for F1 News Bot
"""
import os
import sys
import asyncio
from pathlib import Path
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

# Add src to Python path
sys.path.insert(0, str(Path(__file__).parent / "src"))

def check_required_env_vars():
    """Check that all required environment variables are set"""
    required_vars = [
        'TELEGRAM_BOT_TOKEN',
        'TELEGRAM_CHANNEL_ID', 
        'TELEGRAM_ADMIN_ID',
        'DATABASE_URL',
        'REDIS_URL',
        'OLLAMA_BASE_URL',
        'OLLAMA_MODEL'
    ]
    
    missing_vars = []
    for var in required_vars:
        value = os.environ.get(var)
        if not value or value.strip() == '':
            missing_vars.append(var)
    
    if missing_vars:
        print("‚ùå –û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
        for var in missing_vars:
            print(f"   - {var}")
        print("\nüìù –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –Ω–∞ –æ—Å–Ω–æ–≤–µ .env.example –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.")
        print("   –ü—Ä–∏–º–µ—Ä: cp .env.example .env")
        print("   –ó–∞—Ç–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏.")
        sys.exit(1)
    
    # Check Telegram bot token format
    bot_token = os.environ.get('TELEGRAM_BOT_TOKEN', '')
    if not bot_token or bot_token == 'your_bot_token_here' or ':' not in bot_token:
        print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç TELEGRAM_BOT_TOKEN")
        print("   –¢–æ–∫–µ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 123456789:ABCdefGHIjklMNOpqrsTUVwxyz")
        print("   –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω —É @BotFather –≤ Telegram")
        sys.exit(1)
    
    # Check channel ID format
    channel_id = os.environ.get('TELEGRAM_CHANNEL_ID', '')
    if not channel_id or channel_id == 'your_channel_id_here' or not channel_id.lstrip('-').isdigit():
        print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç TELEGRAM_CHANNEL_ID")
        print("   ID –∫–∞–Ω–∞–ª–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä: -1001234567890)")
        print("   –ü–æ–ª—É—á–∏—Ç–µ ID –∫–∞–Ω–∞–ª–∞, –ø–µ—Ä–µ—Å–ª–∞–≤ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É @userinfobot")
        sys.exit(1)
    
    # Check admin ID format
    admin_id = os.environ.get('TELEGRAM_ADMIN_ID', '')
    if not admin_id or admin_id == 'your_admin_id_here' or not admin_id.isdigit():
        print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç TELEGRAM_ADMIN_ID")
        print("   ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä: 123456789)")
        print("   –ü–æ–ª—É—á–∏—Ç–µ —Å–≤–æ–π ID, –Ω–∞–ø–∏—Å–∞–≤ –±–æ—Ç—É @userinfobot")
        sys.exit(1)
    
    print("‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∏ –≤–∞–ª–∏–¥–Ω—ã")

def setup_environment():
    """Setup environment variables for local development"""
    # Check required variables first
    check_required_env_vars()
    
    # Set default values for optional variables only if not set
    if not os.environ.get('LOG_LEVEL'):
        os.environ['LOG_LEVEL'] = 'INFO'
    if not os.environ.get('DEBUG'):
        os.environ['DEBUG'] = 'true'

def main():
    """Main function"""
    print("üöÄ Starting F1 News Bot locally...")
    
    # Setup environment
    setup_environment()
    
    try:
        # Import and run the application
        from src.main import app
        import uvicorn
        
        print("‚úÖ Application loaded successfully!")
        print("üåê Starting FastAPI server on http://localhost:8000")
        print("üìö API documentation available at http://localhost:8000/docs")
        print("üõë Press Ctrl+C to stop the server")
        
        # Run the server
        uvicorn.run(
            "src.main:app",
            host="0.0.0.0",
            port=8000,
            reload=True,
            log_level="info"
        )
        
    except KeyboardInterrupt:
        print("\nüõë Server stopped by user")
    except Exception as e:
        print(f"‚ùå Error starting server: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
